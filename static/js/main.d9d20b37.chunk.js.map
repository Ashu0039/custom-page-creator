{"version":3,"sources":["components/Header.jsx","components/Toolbar.jsx","element_types.js","components/elements/Heading.jsx","components/elements/Image.jsx","components/elements/Element.jsx","components/Rows.jsx","components/AddRow.jsx","components/AddElement.jsx","components/Overlay.jsx","components/EditingElement.jsx","components/DropZone.jsx","components/Editor.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Toolbar","_ref","addRowClicked","addElementClicked","onClick","HEADING","IMAGE","EMPTY","Heading","id","data","type","rowPos","columnPos","EditorContext","Consumer","_ref2","editElementClicked","deleteElementClicked","index_es","title","icon","Image","alt","src","DefaultElement","EmptyElement","_ref3","elementDropped","elementIsDraggedOver","isElementDragged","concat","onDrop","onDragOver","e","preventDefault","Element","props","components_elements_Heading","components_elements_Image","Element_EmptyElement","Element_DefaultElement","Column","column","rest","Object","objectWithoutProperties","components_elements_Element","assign","element","AddNewRow","handleClick","Row","row","pos","deleteRow","columns","map","c","index","Rows_Column","key","Rows","_ref4","rows","showAddRow","length","r","Rows_Row","Rows_AddNewRow","AddRow","open","closeAddRow","addRowWithColumns","AddElement","closeAddElement","addHeading","addImage","elementDragged","dragEndHappened","draggable","onDragStart","onDragEnd","htmlFor","accept","onChange","target","files","Overlay","show","overlayClicked","EditingElement","state","newData","sidebarOpen","dataUpdated","_this","setState","getTypeOfInput","elementToEdit","value","submitNewData","onSubmit","_this2","this","_this$props","closeEditElement","nextProps","Component","styles","border","width","margin","padding","fontSize","DropZone","style","dropZone","newId","uuid","emptyElement","newHeadingElement","arguments","undefined","newImageElement","image","emptyColumns","noOfColumns","i","push","preFilledColumns","columnElements","React","createContext","Editor","showAddElement","addingElementAtPos","showEditingElement","toggleAddRow","toggleAddElement","_this$state","toggleEditElement","console","log","addNewRow","newRow","addingNewRow","toConsumableArray","getFirstEmptyColumn","j","addNewElement","addNewElementAtPos","rowData","columnData","updatedColumnData","objectSpread","updatedRow","slice","updatedRows","error","newElement","FileReader","fileReader","onload","result","readAsDataURL","updateElementData","_ref5","updatedElement","updatedColumn","editElementSubmitted","deleteElementAtPos","_ref6","newEmptyElement","elementType","addDroppedElement","refs","imageFileInput","click","elementDroppedAt","_ref7","_this$state2","Provider","src_components_Toolbar","src_components_Rows","components_AddRow","src_components_AddElement","imageFile","components_EditingElement","components_DropZone","src_components_Overlay","display","ref","library","add","faEdit","faTrash","App","components_Header","components_Editor","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9d20b37.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <div className=\"header\">Custom Page Creator</div>\n);\n\nexport default Header;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst Toolbar = ({ addRowClicked, addElementClicked }) => (\n  <div className=\"toolbar\">\n    <div className=\"options\">\n      <button className=\"option\" onClick={() => addRowClicked()}>Add Row</button>\n      <button className=\"option\" onClick={() => addElementClicked()}>Add Element</button>\n    </div>\n  </div>\n);\n\nexport default Toolbar;\n","export const HEADING = 'heading';\n\nexport const IMAGE = 'image';\n\nexport const EMPTY = 'empty';","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './Heading.css';\nimport './Element.css';\nimport { EditorContext } from '../Editor';\n\nconst Heading = ({ id, data, type, rowPos, columnPos }) => (\n  <EditorContext.Consumer>\n    {\n      ({\n        editElementClicked, deleteElementClicked,\n      }) => (\n        <div className=\"element heading\">\n          <div className=\"element-options\">\n            <FontAwesomeIcon\n              onClick={() => editElementClicked({id, data, type, rowPos, columnPos})}\n              title=\"Edit\"\n              icon=\"edit\"\n            />\n            <FontAwesomeIcon\n              onClick={() => deleteElementClicked({id, data, type, rowPos, columnPos})}\n              title=\"Delete\"\n              icon=\"trash\"\n            />\n          </div>\n          { data }\n        </div>\n      )\n    }\n  </EditorContext.Consumer>\n);\n\nexport default Heading;\n","import React from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { EditorContext } from '../Editor';\n\nimport './Image.css';\n\nconst Image = ({ id, data, type, rowPos, columnPos }) => (\n  <EditorContext.Consumer>\n    {\n      ({\n        deleteElementClicked,\n      }) => (\n        <div  className=\"element image\">\n          <div className=\"element-options\">\n            <FontAwesomeIcon\n              onClick={() => deleteElementClicked({id, data, type, rowPos, columnPos})}\n              title=\"Delete\"\n              icon=\"trash\"\n            />\n          </div>\n          <img alt=\"Img Element\" src={data} />\n        </div>\n      )\n    }\n  </EditorContext.Consumer>\n);\n\nexport default Image;\n","import React from 'react';\nimport { HEADING, EMPTY, IMAGE } from '../../element_types';\nimport Heading from './Heading';\nimport Image from './Image';\nimport { EditorContext } from '../Editor';\n\nimport './Element.css';\n\nconst DefaultElement = ({ type }) => (\n  <div>Unknown type { type }</div>\n)\n\nconst EmptyElement = ({ rowPos, columnPos }) => (\n  <EditorContext.Consumer>\n    {\n      ({\n        addElementClicked, elementDropped, elementIsDraggedOver, isElementDragged,\n      }) => (\n        <div\n          className={`element empty ${isElementDragged ? 'element-dragged' : ''}`}\n          onDrop={() => elementDropped({ rowPos, columnPos })}\n          onDragOver={(e) => e.preventDefault() && elementIsDraggedOver({rowPos, columnPos})}\n        >\n          <button className=\"custom-button\" onClick={() => addElementClicked({ rowPos, columnPos })}>\n            { isElementDragged ? 'Drop here' : 'Add New Element'}\n          </button>\n        </div>\n      )\n    }\n  </EditorContext.Consumer>\n)\n\nconst Element = (props) => {\n  const { type } = props;\n  // let element;\n\n  switch(type) {\n    case HEADING:\n      return <Heading {...props} />\n    case IMAGE:\n      return <Image {...props} />\n    case EMPTY:\n      return <EmptyElement {...props} />\n    default:\n      return <DefaultElement type={type} />\n  }\n\n  // switch(type) {\n  //   case HEADING:\n  //     element = <Heading {...props} />;\n  //     break;\n  //   case IMAGE:\n  //     element = <Image {...props} />;\n  //     break;\n  //   case EMPTY:\n  //     element = <EmptyElement {...props} />;\n  //     break;\n  //   default:\n  //     element = <DefaultElement type={type} />;\n  // }\n\n  // return (\n  //   <EditorContext.Consumer>\n  //     {\n  //       ({\n  //         elementClicked,\n  //       }) => (\n  //         <element onClick={(e) => elementClicked(e)} />\n  //       )\n  //     }\n  //   </EditorContext.Consumer>\n  // )\n};\n\nexport default Element;\n","import React from 'react';\n\nimport Element from './elements/Element';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './Rows.css';\n\nconst Column = ({ column, ...rest }) => (\n  <div className=\"column\">\n    <Element {...rest} {...column.element} />\n  </div>\n)\n\nconst AddNewRow = ({ handleClick }) => (\n  <div className=\"row add-new-row\">\n    <button className=\"custom-button\" onClick={() => handleClick()}>Add new row</button>\n  </div>\n);\n\nconst Row = ({ row, pos, deleteRow }) => (\n  <div className=\"row\">\n    {\n      row.columns.map((c, index) => <Column columnPos={index} rowPos={pos} column={c} key={c.id} />)\n    }\n    <div className=\"row-options\">\n      <FontAwesomeIcon\n        onClick={() => deleteRow(pos)}\n        title=\"Delete\"\n        icon=\"trash\"\n      />\n    </div>\n  </div>\n);\n\nconst Rows = ({ rows, showAddRow, deleteRow }) => (\n  <div className=\"rows\">\n    {\n      rows.length > 0 ? rows.map((r, index) => <Row deleteRow={deleteRow} row={r} pos={index} key={r.id} />) : <AddNewRow handleClick={showAddRow} />\n    }\n  </div>\n);\n\nexport default Rows;\n","import React from 'react';\n\nimport './Sidebar.css';\n\nconst AddRow = ({ open, closeAddRow, addRowWithColumns }) => (\n  <div className={`sidebar add-row ${open ? 'open' : ''}`}>\n    <div className=\"close-btn\" onClick={() => closeAddRow()}>X</div>\n    <div className=\"title\">Add Row</div>\n    <div className=\"options\">\n      <div className=\"option\" onClick={() => addRowWithColumns(1)}>1 Column</div>\n      <div className=\"option\" onClick={() => addRowWithColumns(2)}>2 Column</div>\n      <div className=\"option\" onClick={() => addRowWithColumns(3)}>3 Column</div>\n      <div className=\"option\" onClick={() => addRowWithColumns(4)}>4 Column</div>\n      <div className=\"option\" onClick={() => addRowWithColumns(5)}>5 Column</div>\n      <div className=\"option\" onClick={() => addRowWithColumns(6)}>6 Column</div>\n    </div>\n  </div>\n);\n\nexport default AddRow;\n","import React from 'react';\n\nimport './AddElement.css';\nimport { HEADING, IMAGE } from '../element_types';\n\nconst AddElement = ({ open, closeAddElement, addHeading, addImage, elementDragged, dragEndHappened }) =>  (\n  <div className={`sidebar add-element ${open ? 'open' : ''}`}>\n    <div className=\"close-btn\" onClick={() => closeAddElement()}>X</div>\n    <div className=\"title\">Add Element</div>\n    <div className=\"options\">\n      <div\n        draggable={true}\n        onDragStart={() => elementDragged(HEADING)}\n        onDragEnd={() => dragEndHappened()}\n        className=\"option\"\n        onClick={() => addHeading()}\n      >\n        Heading\n      </div>\n      <label\n        draggable={true}\n        onDragStart={() => elementDragged(IMAGE)}\n        onDragEnd={() => dragEndHappened()}\n        htmlFor=\"upload-image\"\n        className=\"option\"\n      >\n        Image\n        <input id=\"upload-image\" type=\"file\" accept=\"image/x-png,image/gif,image/jpeg\" onChange={(e) => addImage(e.target.files)} />\n      </label>\n    </div>\n  </div>\n);\n\nexport default AddElement;\n","import React from 'react';\n\nimport './Overlay.css';\n\nconst Overlay = ({ show, overlayClicked }) => (\n  <div onClick={() => overlayClicked()} className={`overlay ${show ? 'show' : ''}`}></div>\n);\n\nexport default Overlay;\n","import React, { Component } from 'react';\n\nimport './Sidebar.css';\nimport { HEADING } from '../element_types';\n\nclass EditingElement extends Component {\n  state = {\n    newData: null,\n    sidebarOpen: false,\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    const { elementToEdit, open } = nextProps;\n    const { sidebarOpen } = state;\n\n    // Sidebar props is now closed but state has it open\n    // Sidebar has been closed\n    if (!open && sidebarOpen) {\n      return { newData: null, sidebarOpen: false };\n    } else if (open && !sidebarOpen) {\n      // sidebar will be opened now\n      return { newData: elementToEdit.data, sidebarOpen: true };\n    } else {\n      return null;\n    }\n  }\n  \n  dataUpdated = (newData) => {\n    this.setState({ newData });\n  }\n\n  getTypeOfInput = () => {\n    const { newData } = this.state;\n    const { elementToEdit } = this.props;\n    const { type } = elementToEdit;\n\n    switch (type) {\n      case HEADING:\n        return <input className=\"heading\" type=\"text\" value={newData} onChange={(e) => this.dataUpdated(e.target.value)} />\n      default:\n        return '';\n    }\n  }\n\n  submitNewData = () => {\n    const { newData } = this.state;\n    this.props.onSubmit(newData);\n  }\n\n  render() {\n    const { open, closeEditElement } = this.props;\n  \n    return (\n      <div className={`sidebar editing-element ${open ? 'open' : ''}`}>\n        <div className=\"close-btn\" onClick={() => closeEditElement()}>X</div>\n        <div className=\"title\">Editor</div>\n        {\n          open && this.getTypeOfInput()\n        }\n        <button className=\"submit\" onClick={() => this.submitNewData()}>Submit</button>\n      </div>\n    );\n  }\n}\n\nexport default EditingElement;\n","import React from 'react';\n\nconst styles = {\n  border: '3px dashed',\n  width: 'calc(100% - 48px - 6px - 24px)',\n  margin: '0 12px',\n  padding: '24px',\n  fontSize: '24px',\n};\n\nconst DropZone = ({ elementDropped, elementIsDraggedOver }) => (\n  <div style={styles} className=\"drop-zone\" onDrop={() => elementDropped({ dropZone: true })}\n    onDragOver={(e) => e.preventDefault() && elementIsDraggedOver({ dropZone: true })}>\n    Drop here to create a new row for the element\n  </div>\n);\n\nexport default DropZone;\n","import React, { Component } from 'react';\nimport uuid from 'uuid';\nimport Toolbar from './Toolbar';\nimport Rows from './Rows';\nimport AddRow from './AddRow';\nimport AddElement from './AddElement';\nimport Overlay from './Overlay';\nimport { HEADING, EMPTY, IMAGE } from '../element_types';\nimport EditingElement from './EditingElement';\nimport DropZone from './DropZone';\n\nconst newId = () => {\n  return uuid();\n}\n\nconst emptyElement = () => {\n  return { type: EMPTY };\n}\n\nconst newHeadingElement = (data='Heading') => {\n  return { type: HEADING, data };\n}\n\nconst newImageElement = (image) => {\n  return { type: IMAGE, data: image };\n}\n\nconst emptyColumns = (noOfColumns) => {\n  let columns = [];\n\n  for(let i=0; i<noOfColumns; i++) {\n    const column = { id: newId() };\n    column.element = emptyElement();\n    columns.push(column);\n  }\n\n  return columns;\n}\n\nconst preFilledColumns = (columnElements) => {\n  const columns = columnElements.map(element => ({ id: newId(), element }));\n  return columns;\n};\n\nexport const EditorContext = React.createContext({\n  addElementClicked: () => {},\n});\n\nclass Editor extends Component {\n  state = {\n    showAddRow: false,\n    showAddElement: false,\n    rows: [\n      {\n        id: 1,\n        columns: [\n          {\n            id: 1,\n            element: {\n              type: HEADING,\n              data: 'Hello world!',\n            },\n          }\n        ]\n      }\n    ],\n    addingElementAtPos: null,\n    showEditingElement: false,\n    elementToEdit: null,\n    elementDragged: null,\n  }\n\n  toggleAddRow = () => {\n    const { showAddRow } = this.state;\n    this.setState({ showAddRow: !showAddRow });\n  }\n\n  closeAddRow = () => this.setState({ showAddRow: false })\n\n  toggleAddElement = () => {\n    const { showAddElement } = this.state;\n    this.setState({ showAddElement: !showAddElement });\n  }\n\n  closeAddElement = () => {\n    this.setState({ showAddElement: false })\n    return true;\n  }\n\n  overlayClicked = () => {\n    const { showAddRow, showAddElement, showEditingElement } = this.state;\n\n    if (showAddRow) {\n      this.toggleAddRow();\n    }\n\n    if (showAddElement) {\n      this.toggleAddElement();\n    }\n\n    if (showEditingElement) {\n      this.toggleEditElement();\n    }\n  }\n\n  addRowWithColumns = (noOfColumns) => {\n    console.log('add new row with columns --> ', noOfColumns);\n    this.closeAddRow();\n\n    this.addNewRow({ noOfColumns });\n  }\n\n  addNewRow = ({ noOfColumns, columnElements }) => {\n    const newRow = {\n      id: newId(),\n      columns: columnElements ? preFilledColumns(columnElements) : emptyColumns(noOfColumns),\n    };\n\n    const { rows } = this.state;\n    const addingNewRow = [...rows, newRow];\n\n    this.setState({ rows: addingNewRow });\n    return newRow.id;\n  }\n\n  getFirstEmptyColumn = () => {\n    const { rows } = this.state;\n    for(let i=0; i<rows.length; i++) {\n      const { columns } = rows[i];\n\n      for(let j=0; j<columns.length; j++) {\n        const { element } = columns[j];\n        if (element.type === EMPTY) {\n          return { rowPos: i, columnPos: j };\n        }\n      }\n    }\n\n    return { rowPos: null, columnPos: null };\n  }\n\n  addNewElement = ({ element }) => {\n    // If we have some position to which element is being added\n    const { addingElementAtPos } = this.state;\n\n    if (addingElementAtPos) {\n      console.log('adding element at pos --> ', addingElementAtPos);\n      const { rowPos, columnPos } = addingElementAtPos;\n      this.addNewElementAtPos({ rowPos, columnPos, element });\n      return;\n    }\n\n    // If no particular position to add element, then create a new row just for it\n      const columnElements = [element];\n      this.addNewRow({ noOfColumns: 1, columnElements });\n\n\n    // No unintended logics\n    // // Insert element at first empty element\n    // const { rowPos, columnPos } = this.getFirstEmptyColumn();\n    // console.log('got first empty element --> ', rowPos, columnPos);\n\n    // // No empty element found, create a new row with single column and then insert element into it\n    // if (rowPos === null || columnPos === null) {\n    //   // new row added\n    //   const columnElements = [element];\n    //   this.addNewRow({ noOfColumns: 1, columnElements });\n    // } else {\n    //   this.addNewElementAtPos({ rowPos, columnPos, element });\n    // }\n  }\n\n  addNewElementAtPos = ({ rowPos, columnPos, element }) => {\n    if (rowPos === -1 || columnPos === -1) {\n      console.error('invalid position --> ', rowPos, columnPos);\n      return;\n    }\n\n    const { rows } = this.state;\n\n    const rowData = rows[rowPos];\n\n    const columnData = rowData.columns[columnPos];\n    console.log('row --> ', rowData, ' column ', columnData);\n\n    const updatedColumnData = {\n      ...columnData,\n      element,\n    };\n\n    const updatedRow = {\n      ...rowData,\n      columns: [...rowData.columns.slice(0, columnPos), updatedColumnData, ...rowData.columns.slice(columnPos + 1)],\n    };\n\n    const updatedRows = [...rows.slice(0, rowPos), updatedRow, ...rows.slice(rowPos + 1)];\n\n    this.setState({ rows: updatedRows, addingElementAtPos: null });\n  }\n\n  addHeading = () => {\n    console.log('add new heading element');\n    const newElement = newHeadingElement();\n\n    this.addNewElement({ element: newElement });\n  } \n\n  addImage = (files) => {\n    console.log('add image --> ', files);\n    if (FileReader && files && files.length) {\n      const fileReader = new FileReader();\n\n      fileReader.onload = () => {\n          const image = fileReader.result;\n          const newElement = newImageElement(image);\n          this.addNewElement({ element: newElement });\n      };\n      \n      fileReader.readAsDataURL(files[0]);\n    }\n  }\n\n  addElementClicked = ({ rowPos, columnPos }) => {\n    this.setState({ addingElementAtPos: {rowPos, columnPos} }, () => this.toggleAddElement());\n  }\n\n  editElementClicked = (element) => {\n    const { type, rowPos, columnPos, data } = element;\n    console.log('element clicked --> ', type, data, rowPos, columnPos);\n    this.setState({ elementToEdit: element });\n    this.toggleEditElement();\n  }\n\n  updateElementData = ({ rowPos, columnPos, value }) => {\n    const { rows } = this.state;\n\n    const row = rows[rowPos];\n    const { columns } = row;\n    const column = columns[columnPos];\n    const { element } = column;\n    const updatedElement = { ...element, data: value };\n\n    const updatedColumn = { ...column, element: updatedElement };\n\n    const updatedRow = { ...row, columns: [...columns.slice(0, columnPos), updatedColumn, ...columns.slice(columnPos + 1)] };\n\n    const updatedRows = [...rows.slice(0, rowPos), updatedRow, ...rows.slice(rowPos + 1)];\n\n    this.setState({ rows: updatedRows });\n  }\n\n  editElementSubmitted = (value) => {\n    console.log('data submit for edit element --> ', value);\n    const { elementToEdit } = this.state;\n    const { type, columnPos, rowPos } = elementToEdit;\n\n    switch (type) {\n      case HEADING:\n        this.updateElementData({ columnPos, rowPos, value });\n        break;\n      default:\n    }\n    this.closeEditElement();\n  }\n\n  toggleEditElement = () => {\n    const { showEditingElement } = this.state;\n    this.setState({ showEditingElement: !showEditingElement });\n  }\n\n  closeEditElement = () => this.setState({ showEditingElement: false, elementToEdit: null })\n\n  deleteElementAtPos = ({ rowPos, columnPos }) => {\n    if (rowPos === -1 || columnPos === -1) {\n      console.error('invalid position --> ', rowPos, columnPos);\n      return;\n    }\n\n    const { rows } = this.state;\n\n    const rowData = rows[rowPos];\n\n    const columnData = rowData.columns[columnPos];\n    // console.log('row --> ', rowData, ' column ', columnData);\n\n    const newEmptyElement = emptyElement();\n\n    const updatedColumnData = {\n      ...columnData,\n      element: newEmptyElement,\n    };\n\n    const updatedRow = {\n      ...rowData,\n      columns: [...rowData.columns.slice(0, columnPos), updatedColumnData, ...rowData.columns.slice(columnPos + 1)],\n    };\n\n    const updatedRows = [...rows.slice(0, rowPos), updatedRow, ...rows.slice(rowPos + 1)];\n\n    this.setState({ rows: updatedRows });\n  }\n\n  deleteElementClicked = (element) => {\n    const { rowPos, columnPos } = element;\n    console.log('delete element clicked --> ', rowPos, columnPos);\n    this.deleteElementAtPos({ rowPos, columnPos });\n  }\n\n  elementDragged = (elementType) => {\n    console.log('element is being dragged --> ', elementType);\n    this.setState({ elementDragged: elementType });\n    this.closeAddElement();\n  }\n\n  addDroppedElement = () => {\n    const { elementDragged } = this.state;\n\n    switch(elementDragged) {\n      case HEADING:\n        this.addHeading();\n        break;\n      case IMAGE:\n        console.log('added a new image');\n        this.refs.imageFileInput.click();\n        break;\n      default:\n    }\n  }\n\n  elementDropped = (elementDroppedAt) => {\n    const { dropZone, rowPos, columnPos } = elementDroppedAt;\n    if (dropZone) {\n      this.addDroppedElement();\n    } else if(rowPos >= 0 && columnPos >= 0) {\n      console.log('adding element at pos --> ', rowPos, columnPos);\n      this.setState({ addingElementAtPos: elementDroppedAt }, () => this.addDroppedElement());\n    }\n  }\n\n  elementIsDraggedOver = ({ rowPos, columnPos }) => {\n    // set the position over which element drag is happening\n  }\n\n  dragEndHappened = () => {\n    console.log('drag end happened, resetting element dragged var');\n    this.setState({ elementDragged: null });\n  }\n\n  deleteRow = (rowPos) => {\n    console.log('delete row at pos --> ', rowPos);\n    if (rowPos > -1 && rowPos !== null) {\n      const { rows } = this.state;\n\n      const updatedRows = [...rows.slice(0, rowPos), ...rows.slice(rowPos + 1)];\n      this.setState({ rows: updatedRows });\n    }\n  }\n\n  render() {\n    const { showAddRow, showAddElement, rows, showEditingElement, elementToEdit, elementDragged } = this.state;\n\n    return (\n      <EditorContext.Provider\n        value={{ \n          addElementClicked: this.addElementClicked,\n          editElementClicked: this.editElementClicked,\n          deleteElementClicked: this.deleteElementClicked,\n          elementDropped: this.elementDropped,\n          elementIsDraggedOver: this.elementIsDraggedOver,\n          isElementDragged: !!elementDragged,\n        }}\n      >\n        <div className=\"editor\">\n          <Toolbar addRowClicked={this.toggleAddRow} addElementClicked={this.toggleAddElement} />\n          <Rows rows={rows} showAddRow={this.toggleAddRow} deleteRow={this.deleteRow} />\n          <AddRow open={showAddRow} closeAddRow={this.toggleAddRow} addRowWithColumns={this.addRowWithColumns} />\n          <AddElement\n            open={showAddElement}\n            closeAddElement={this.toggleAddElement}\n            addHeading={() => this.closeAddElement() && this.addHeading()}\n            addImage={(imageFile) => this.closeAddElement() && this.addImage(imageFile)}\n            elementDragged={this.elementDragged}\n            dragEndHappened={this.dragEndHappened}\n          />\n          <EditingElement\n            open={showEditingElement}\n            elementToEdit={elementToEdit}\n            onSubmit={this.editElementSubmitted}\n            closeEditElement={this.closeEditElement}\n          />\n          {\n            elementDragged && <DropZone elementDropped={this.elementDropped} elementIsDraggedOver={this.elementIsDraggedOver} />\n          }\n          <Overlay show={showAddRow || showAddElement || showEditingElement} overlayClicked={() => this.overlayClicked()} />\n          <input style={{ display: 'none' }} ref=\"imageFileInput\" id=\"upload-image\" type=\"file\" accept=\"image/x-png,image/gif,image/jpeg\" onChange={(e) => this.addImage(e.target.files)} />\n        </div>\n      </EditorContext.Provider>\n    );\n  }\n}\n\nexport default Editor;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Editor from './components/Editor';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faEdit, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faEdit, faTrash);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Editor />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}